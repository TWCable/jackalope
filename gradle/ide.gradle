apply plugin: 'idea'
apply plugin: 'eclipse'

//*************************************************************************
//
// IntelliJ IDEA configuration
//
//*************************************************************************

idea.module {
    downloadJavadoc = true
    downloadSources = true
}

idea.project {
    vcs = 'Git'

    ipr {
        withXml { provider ->
            def codeStyleNode = provider.node.component.find { it.@name == 'ProjectCodeStyleSettingsManager' }
            if (codeStyleNode == null) {
                codeStyleNode = provider.node.appendNode('component', [name: 'ProjectCodeStyleSettingsManager'])
            }
            codeStyleNode.replaceNode { node ->
                component(name: 'ProjectCodeStyleSettingsManager') {
                    option(name: "PER_PROJECT_SETTINGS") {
                        value {
                            option(name: "OTHER_INDENT_OPTIONS") {
                                value {
                                    option(name: "INDENT_SIZE", value: "4")
                                    option(name: "CONTINUATION_INDENT_SIZE", value: "4")
                                    option(name: "TAB_SIZE", value: "4")
                                    option(name: "USE_TAB_CHARACTER", value: "false")
                                    option(name: "SMART_TABS", value: "false")
                                    option(name: "LABEL_INDENT_SIZE", value: "0")
                                    option(name: "LABEL_INDENT_ABSOLUTE", value: "false")
                                    option(name: "USE_RELATIVE_INDENTS", value: "false")
                                }
                            }
                            option(name: "CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND", value: "9999")
                            option(name: "NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND", value: "9999")
                            XML {
                                option(name: "XML_LEGACY_SETTINGS_IMPORTED", value: "true")
                            }

                            // this is needed in addition to the one below, for import settings
                            GroovyCodeStyleSettings {
                                option(name: "CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND", value: "9999")
                                option(name: "NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND", value: "9999")
                            }

                            // oddly, both "JAVA" and "Java" are used...
                            ['Groovy', 'JAVA', 'Java', 'Scala'].each {
                                codeStyleSettings(language: it) {
                                    option(name: "CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND", value: "9999")
                                    option(name: "NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND", value: "9999")
                                    option(name: "BLANK_LINES_AROUND_METHOD", value: "2")
                                    //option(name: "BLANK_LINES_BEFORE_METHOD_BODY", value: "1")
                                    option(name: "ELSE_ON_NEW_LINE", value: "true")
                                    option(name: "CATCH_ON_NEW_LINE", value: "true")
                                    option(name: "FINALLY_ON_NEW_LINE", value: "true")
                                    option(name: "SPACE_AFTER_TYPE_CAST", value: "false")
                                    option(name: "INDENT_SIZE", value: "2")
                                    option(name: "TAB_SIZE", value: "4")

                                    // both this level and 'indentOptions' are used
                                    option(name: "CONTINUATION_INDENT_SIZE", value: "4")
                                    indentOptions {
                                        option(name: "CONTINUATION_INDENT_SIZE", value: "4")
                                    }
                                }
                            }
                        }
                    }
                    option(name: "USE_PER_PROJECT_SETTINGS", value: "true")
                }
            }
        }
    }
}
